import { Page } from '@playwright/test';
import { HeadfulClient, HeadfulClientEvents } from '../../core/client/headful-client';
import { SessionConfig, SessionInfo, UserSessionConfig } from '../../core/session';
import { PlaywrightSession } from './session';
import { AppetizeWindow, PlaywrightSocket } from './socket';
import { AppetizeTestFixture } from './fixture';
export declare class PlaywrightClient extends HeadfulClient<PlaywrightSocket, PlaywrightClientEvents, PlaywrightSession> {
    page: Page;
    window: AppetizeWindow;
    testFixture: AppetizeTestFixture;
    constructor({ page, testFixture, }: {
        page: Page;
        testFixture: AppetizeTestFixture;
    });
    init(): Promise<void>;
    protected validateConfig(config: UserSessionConfig): {
        publicKey?: string;
        buildId?: string;
        debug?: boolean;
        audio?: boolean;
        device?: string;
        orientation?: string;
        adbShellCommand?: string;
        osVersion?: string;
        scale?: number | "auto";
        autoplay?: boolean;
        androidPackageManager?: boolean;
        appearance?: string;
        codec: string;
        deviceColor?: string;
        disableSessionStart?: boolean;
        disableVirtualKeyboard?: boolean;
        enableAdb?: boolean;
        grantPermissions?: boolean;
        hidePasswords?: boolean;
        iosKeyboard?: string;
        iosAutocorrect?: string;
        language?: string;
        launchUrl?: string;
        launchArgs?: Array<string | number>;
        locale?: string;
        location?: number[];
        loopback?: boolean;
        noVideo?: boolean;
        payerCode?: string;
        params?: Record<string, any>;
        plistEdit?: Record<string, any>;
        proxy?: string;
        record?: boolean;
        region?: string;
        screenOnly?: boolean;
        screenRecording?: boolean;
        showRotateButtons?: boolean;
        timezone?: string;
        endSessionRedirectUrl?: string;
        userInteractionDisabled?: boolean;
        volume?: number;
        debugSession?: boolean;
    };
    protected createSession(config: SessionConfig, sessionInfo: SessionInfo): PlaywrightSession;
}
export interface PlaywrightClientEvents extends HeadfulClientEvents<PlaywrightSession> {
}
