import { Platform, ScreenBounds } from '../types/recorder/common';
import * as InternalRecorderAPI from '../types/recorder/internal';
import * as PublicRecorderAPI from '../types/recorder/public';
import { ElementMapper } from './element';
export declare class ActionMapper {
    platform: Platform;
    screen: ScreenBounds;
    elementMapper: ElementMapper;
    constructor({ platform, screen, }: {
        platform: Platform;
        screen: ScreenBounds;
    });
    private pixelToDip;
    private dipToPixel;
    private getCoordinates;
    private getPosition;
    private toInternalKey;
    private toPublicKey;
    toInternal(action: PublicRecorderAPI.Action | PublicRecorderAPI.RecordedAction): {
        type: "tap";
        id?: string;
        appId?: string;
        element: {
            path?: string | undefined;
            type?: string | undefined;
            source?: string | undefined;
            bounds?: InternalRecorderAPI.ElementBounds | undefined;
            attributes?: ((InternalRecorderAPI.IOSElementAttributes | InternalRecorderAPI.AndroidElementAttributes) & Partial<InternalRecorderAPI.IOSElementAttributes | InternalRecorderAPI.AndroidElementAttributes>) | undefined;
            accessibilityElements?: InternalRecorderAPI.IOSAccessibilityElement[];
        };
        localPosition?: InternalRecorderAPI.Position;
        coordinates?: undefined;
        duration?: number;
    } | {
        type: "tap";
        id?: string;
        appId?: string;
        coordinates: {
            x: number;
            y: number;
        };
        element?: undefined;
        localPosition?: undefined;
        duration?: number;
    } | {
        type: "tap";
        id?: string;
        appId?: string;
        localPosition: {
            x: number;
            y: number;
        };
        element?: undefined;
        coordinates?: undefined;
        duration?: number;
    } | {
        type: "swipe";
        id?: string;
        appId?: string;
        element: {
            path?: string | undefined;
            type?: string | undefined;
            source?: string | undefined;
            bounds?: InternalRecorderAPI.ElementBounds | undefined;
            attributes?: ((InternalRecorderAPI.IOSElementAttributes | InternalRecorderAPI.AndroidElementAttributes) & Partial<InternalRecorderAPI.IOSElementAttributes | InternalRecorderAPI.AndroidElementAttributes>) | undefined;
            accessibilityElements?: InternalRecorderAPI.IOSAccessibilityElement[];
        };
        localPosition?: InternalRecorderAPI.Position;
        coordinates?: undefined;
        moves: {
            x: number;
            y: number;
            t: number;
        }[];
    } | {
        type: "swipe";
        id?: string;
        appId?: string;
        coordinates: {
            x: number;
            y: number;
        };
        element?: undefined;
        localPosition?: undefined;
        moves: {
            x: number;
            y: number;
            t: number;
        }[];
    } | {
        type: "swipe";
        id?: string;
        appId?: string;
        localPosition: {
            x: number;
            y: number;
        };
        element?: undefined;
        coordinates?: undefined;
        moves: {
            x: number;
            y: number;
            t: number;
        }[];
    } | {
        type: "keypress";
        key: string;
        character?: string;
        shiftKey?: InternalRecorderAPI.BooleanNumber;
        id?: string;
        appId?: string;
    } | {
        type: "findElements";
        element: {
            path?: string | undefined;
            type?: string | undefined;
            source?: string | undefined;
            bounds?: InternalRecorderAPI.ElementBounds | undefined;
            attributes?: ((InternalRecorderAPI.IOSElementAttributes | InternalRecorderAPI.AndroidElementAttributes) & Partial<InternalRecorderAPI.IOSElementAttributes | InternalRecorderAPI.AndroidElementAttributes>) | undefined;
            accessibilityElements?: InternalRecorderAPI.IOSAccessibilityElement[];
        };
        id?: string;
        appId?: string;
    } | {
        type: "typeText";
        text: string;
        id?: string;
        appId?: string;
    } | {
        type: "softKeyboardReturn";
        id?: string;
        appId?: string;
    } | {
        type: "softKeyboardText";
        text: string;
        id?: string;
        appId?: string;
    };
    toPublic(action: InternalRecorderAPI.Action | InternalRecorderAPI.RecordedAction): PublicRecorderAPI.Action | PublicRecorderAPI.RecordedAction;
}
